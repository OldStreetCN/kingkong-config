server:
  port: 8093
  servlet:
    context-path: /server
    compression:
      enabled: true
      mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*
management:
 endpoints:
  web:
   exposure:
    include: metrics,httptrace
swagger:
  production: false
  basic:
    enable: true
    username: admin
    password: 123456
spring:
  http-client:
    pool:
      #连接池的最大连接数，0代表不限；如果取0，需要考虑连接泄露导致系统崩溃的后果
      maxTotalConnect: 1000
      #每个路由的最大连接数,如果只调用一个地址,可以将其设置为最大连接数
      maxConnectPerRoute: 200
      # 指客户端和服务器建立连接的超时时间,ms , 最大约21秒,因为内部tcp在进行三次握手建立连接时,默认tcp超时时间是20秒
      connectTimeout: 3000
      # 指客户端从服务器读取数据包的间隔超时时间,不是总读取时间,也就是socket timeout,ms
      readTimeout: 30000
      # 从连接池获取连接的timeout,不宜过大,ms
      connectionRequestTimout: 200
      # 重试次数
      retryTimes: 3
      charset: UTF-8
      # 长连接保持时间 单位s,不宜过长
      keepAliveTime: 10
      # 针对不同的网址,长连接保持的存活时间,单位s,如果是频繁而持续的请求,可以设置小一点,不建议设置过大,避免大量无用连接占用内存资源
      keepAliveTargetHost:
        www.baidu.com: 5
  mail:
    host: smtp.163.com
    username: jeecgos@163.com
    password: ??
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  ## quartz定时任务,采用数据库方式
  quartz:
    job-store-type: jdbc
    #properties:
     # org:
     #   quartz:
      #    jobStore:
       #     class: org.quartz.impl.jdbcjobstore.JobStoreTX
        #    driverDelegateClass: org.quartz.impl.jdbcjobstore.MSSQLDelegate
  #json 时间戳统一转换
  jackson:
    date-format:   yyyy-MM-dd HH:mm:ss
    time-zone:   GMT+8
  aop:
    proxy-target-class: true
  #配置freemarker
  freemarker:
    # 设置模板后缀名
    suffix: .ftl
    # 设置文档类型
    content-type: text/html
    # 设置页面编码格式
    charset: UTF-8
    # 设置页面缓存
    cache: false
    prefer-file-system-access: false
    # 设置ftl文件路径
    template-loader-path:
      - classpath:/templates
  # 设置静态文件路径，js,css等
  mvc:
    static-path-pattern: /**
  resource:
    static-locations: classpath:/static/,classpath:/public/
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    druid:
      filters: wall
      filter:
        wall:
          enabled: false
      stat-view-servlet:
        loginUsername: admin
        loginPassword: 123456
    dynamic:
      druid: # 全局druid参数，绝大部分值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
        # 连接池的配置信息
        # 初始化大小，最小，最大
        initial-size: 5
        min-idle: 5
        maxActive: 10
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
        wall:
          select-where-alway-true-check: false
          condition-double-const-allow: true
          conditionAndAlwayTrueAllow: true
      datasource:
        master:
          #url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=JEECG;
          #username: sa
          #password: sql2012
          #driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
          #
          url: jdbc:oracle:thin:@10.124.39.244:1521:orcl
          username: kingkong
          password: kingkong
          driver-class-name: oracle.jdbc.OracleDriver
#          url: jdbc:oracle:thin:@10.124.39.248:1521:orcl
#          username: kingkong
#          password: kingkong
#          driver-class-name: oracle.jdbc.OracleDriver
#        #短信平台据源
#        multi-datasource1:
#          url: jdbc:mysql://172.21.39.119:3306/MASSI?useUnicode=true&characterEncoding=utf8
#          username: api2018
#          password: api2018
#          driver-class-name: com.mysql.jdbc.Driver
        #A++数据源
        ufgov-datasource:
          url: jdbc:oracle:thin:@10.124.39.23:1521:rac1
          username: ufgov
          password: ufgov
          driver-class-name: oracle.jdbc.OracleDriver
          #内控数据源
        neikong-datasource:
          url: jdbc:oracle:thin:@10.124.39.244:1521:orcl
          username: rcm
          password: root
          driver-class-name: oracle.jdbc.OracleDriver
  #redis 配置
  redis:
    database: 0
    host: 127.0.0.1
#    host: 192.168.1.105
    #host: 10.124.30.230
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 0 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    #password: 'kingkong123'
    #password: '123456'
    port: 6379

  #集成activiti
  activiti:
    check-process-definitions: true #自动检查、部署流程定义文件
    database-schema-update: true #自动更新数据库结构
    process-definition-location-prefix: classpath:/processes/ #流程定义文件存放目录
#mybatis plus 设置
mybatis-plus:
  mapper-locations: classpath*:**/modules/**/mapper/xml/*Mapper.xml

#jeecg专用配置
jeecg :
  path :
    #文件上传根目录 设置
    upload: D://upFiles
    #webapp文件路径
    webapp: D://webapp
#网银配置
payment:
  others:
    bank:
      exclusions: 103,105
  abc:
    socket:
      ip: 10.124.39.247
      port: 15999
    is:
      production: true
    batchFile:
      dir: C:/Program Files (x86)/\u4E2D\u56FD\u519C\u4E1A\u94F6\u884C/\u4E2D\u56FD\u519C\u4E1A\u94F6\u884C\u94F6\u4F01\u901A\u5E73\u53F0/detail
    ftp:
      ip: 10.124.39.247
      port: 21
      userName: QXJ
      password: QXJftp@2018
  ccb:
    socket:
      ip: 10.124.39.45
      port: 12345
    is:
      production: true
    client:
      user: WLPT03
      password: 1111111111
---
spring:
  application:
    name: platform-service
  rabbitmq:
    host: 192.168.101.21
    username: admin
    password: 123
    virtual-host: /
    template:
      queue: leyou.order.delay.queue
    publisher-confirms: true
  redis:
    host: 127.0.0.1
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka
    registry-fetch-interval-seconds: 5
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true  #当你获取host时，返回的不是主机名，而是ip
    ip-address: 127.0.0.1
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10


ribbon:
  ConnectTimeout: 4000 # 连接超时时间(ms)
  ReadTimeout: 2000 # 通信超时时间(ms)
  OkToRetryOnAllOperations: true # 是否对所有操作重试
  MaxAutoRetriesNextServer: 1 # 同一服务不同实例的重试次数
  MaxAutoRetries: 1 # 同一实例的重试次数
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMillisecond: 10000 # 熔断超时时长：10000ms

leyou:
  worker:
    workerId: 1
    dataCenterId: 1
  jwt:
    cookieName: LY_TOKEN
    pubKeyPath: E:\User\data\rsa\rsa.pub # 公钥地址
  pay:
    appId: wx8397f8696b538317
    mchId: 1473426802
    key: T6m9iK73b0kn9g5v426MKfHQH7X8rKwb
    connectTimeoutMs: 5000
    readTimeoutMs: 10000
